#!/usr/bin/env python3
"""
–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ Zabbix ‚Üí NetBox
"""
import sys
import logging
import argparse
from datetime import datetime
import urllib3
import config
from sync import ServerSync
from utils import NotificationHelper

# –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è SSL
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
def setup_logging():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
    import os
    os.makedirs(config.LOG_DIR, exist_ok=True)
    
    log_file = f"{config.LOG_DIR}/sync_{datetime.now().strftime('%Y%m%d_%H%M%S')}.log"
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä
    formatter = logging.Formatter(config.LOG_FORMAT)
    
    # –§–∞–π–ª–æ–≤—ã–π handler
    file_handler = logging.FileHandler(log_file)
    file_handler.setFormatter(formatter)
    
    # –ö–æ–Ω—Å–æ–ª—å–Ω—ã–π handler
    console_handler = logging.StreamHandler()
    console_handler.setFormatter(formatter)
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º root logger
    logger = logging.getLogger()
    logger.setLevel(getattr(logging, config.LOG_LEVEL))
    logger.addHandler(file_handler)
    logger.addHandler(console_handler)
    
    # –£–º–µ–Ω—å—à–∞–µ–º —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –±–∏–±–ª–∏–æ—Ç–µ–∫
    logging.getLogger('urllib3').setLevel(logging.WARNING)
    logging.getLogger('pynetbox').setLevel(logging.WARNING)
    logging.getLogger('pyzabbix').setLevel(logging.WARNING)
    
    return logger, log_file


def parse_arguments():
    """–ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏"""
    parser = argparse.ArgumentParser(
        description='–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–æ–≤ –∏–∑ Zabbix –≤ NetBox'
    )
    
    parser.add_argument(
        '--dry-run',
        action='store_true',
        help='–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π'
    )
    
    parser.add_argument(
        '--limit',
        type=int,
        help='–û–≥—Ä–∞–Ω–∏—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ö–æ—Å—Ç–æ–≤'
    )
    
    parser.add_argument(
        '--no-redis',
        action='store_true',
        help='–ó–∞–ø—É—Å–∫ –±–µ–∑ Redis (–≤—Å–µ —Ö–æ—Å—Ç—ã –∫–∞–∫ –Ω–æ–≤—ã–µ)'
    )
    
    parser.add_argument(
        '--no-telegram',
        action='store_true',
        help='–û—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram'
    )
    
    parser.add_argument(
        '--verbose',
        action='store_true',
        help='–ü–æ–¥—Ä–æ–±–Ω—ã–π –≤—ã–≤–æ–¥ (DEBUG)'
    )
    
    parser.add_argument(
        '--validate-only',
        action='store_true',
        help='–¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é'
    )
    
    parser.add_argument(
        '--check-decommissioned',
        action='store_true',
        help='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ –ø–æ–º–µ—Ç–∏—Ç—å –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞'
    )
    
    return parser.parse_args()


def validate_configuration():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    errors = config.validate_config()
    
    if errors:
        print("‚ùå –û—à–∏–±–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
        for error in errors:
            print(f"  ‚Ä¢ {error}")
        return False
    
    print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–∞–ª–∏–¥–Ω–∞")
    return True


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    # –ü–∞—Ä—Å–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    args = parse_arguments()
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if args.dry_run:
        config.DRY_RUN = True
    if args.limit:
        config.HOST_LIMIT = args.limit
    if args.no_redis:
        config.REDIS_ENABLED = False
    if args.no_telegram:
        config.TELEGRAM_ENABLED = False
    if args.verbose:
        config.LOG_LEVEL = 'DEBUG'
    
    # –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if args.validate_only:
        sys.exit(0 if validate_configuration() else 1)
    
    if not validate_configuration():
        sys.exit(1)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    logger, log_file = setup_logging()
    
    logger.info("=" * 60)
    logger.info("–ó–ê–ü–£–°–ö –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò ZABBIX ‚Üí NETBOX")
    logger.info(f"–õ–æ–≥ —Ñ–∞–π–ª: {log_file}")
    if config.DRY_RUN:
        logger.info("üî∏ MODE: DRY RUN (—Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º)")
    if config.HOST_LIMIT:
        logger.info(f"üî∏ LIMIT: {config.HOST_LIMIT} —Ö–æ—Å—Ç–æ–≤")
    logger.info("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    sync = ServerSync()
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ä–≤–∏—Å–∞–º
        if not sync.connect_services():
            logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º —Å–µ—Ä–≤–∏—Å–∞–º")
            sys.exit(1)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
        stats = sync.run_sync()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        if config.TELEGRAM_ENABLED:
            message = NotificationHelper.format_sync_summary(
                stats['new_hosts'],
                stats['changed_hosts'],
                len(stats['new_hosts']) + len(stats['changed_hosts']),
                len(stats['error_hosts']),
                new_models=stats['new_models'],
                decommissioned=stats['decommissioned_hosts'],
                detailed_changes=stats.get('detailed_changes', {}),
                error_details=stats.get('error_details', {}),
                format_type=config.TELEGRAM_PARSE_MODE
            )
            sync.send_telegram_notification(message)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–¥ –≤—ã—Ö–æ–¥–∞
        if stats['error_hosts']:
            sys.exit(2)  # –ï—Å—Ç—å –æ—à–∏–±–∫–∏
        else:
            sys.exit(0)  # –£—Å–ø–µ—à–Ω–æ
    
    except KeyboardInterrupt:
        logger.info("\n‚ö†Ô∏è –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(130)
    
    except Exception as e:
        logger.error(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}", exc_info=True)
        
        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        if config.TELEGRAM_ENABLED and sync.telegram_bot:
            error_msg = NotificationHelper.format_error_notification(
                str(e),
                {'log_file': log_file},
                format_type=config.TELEGRAM_PARSE_MODE
            )
            sync.send_telegram_notification(error_msg)
        
        sys.exit(1)
    
    finally:
        # –û—Ç–∫–ª—é—á–∞–µ–º—Å—è –æ—Ç —Å–µ—Ä–≤–∏—Å–æ–≤
        sync.disconnect_services()
        logger.info("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã")


if __name__ == "__main__":
    main()